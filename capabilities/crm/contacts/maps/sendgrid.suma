profile = "crm/contacts@1.0"
provider = "sendgrid"

map Create {
  return map error if (input.email === undefined || input.email === null) {
    title = "Missing field"
    detail = "SendGrid requires email on contact"
  }

  http PUT "/marketing/contacts" {
    security "bearer_token"

    request {
      body = {
        contacts: [{
          email: input.email,
          phone_number: input.phone,
          first_name: input.firstName,
          last_name: input.lastName,
          country: input.country,
          custom_fields: input.customProperties
        }]
      }
    }

    response 202 {
      map result {
        id = null
      }
    }

    response 400 "application/json" {
      map error {
        title = "Invalid inputs"
        detail = body.errors.map((err) => `${err.field}: ${err.message}`).join(' ')
      }
    }

    response 413 "application/json" {
      map error {
        title = "Payload Too Large"
        detail = body.errors.map((err) => err.message).join(' ')
      }
    }

    response 401 "application/json" {
      map error {
        title = "Unauthorized"
        detail = body.errors.map((err) => err.message).join(' ')
      }
    }

    response 403 "application/json" {
      map error {
        title = "Forbidden"
        detail = body.errors.map((err) => err.message).join(' ')
      }
    }

    response 500 "application/json" {
      map error {
        title = "Internal server Error"
        detail = body.errors.map((err) => err.message).join(' ')
      }
    }
  }
}

map Update {
  return map error if (
    (input.id === undefined || input.id === null) && (input.email === undefined || input.email === null)
  ) {
    title = "Missing field"
    detail = "You must specify id or email to identify contact"
  }

  http PUT "/marketing/contacts" {
    security "bearer_token"

    request {
      body = {
        contacts: [{
          email: input.id || input.email ,
          phone_number: input.phone,
          first_name: input.firstName,
          last_name: input.lastName,
          country: input.country,
          custom_fields: input.customProperties
        }]
      }
    }

    response 202 {
      map result {
        id = input.id
      }
    }

    response 400 "application/json" {
      map error {
        title = "Invalid inputs"
        detail = body.errors.map((err) => `${err.field}: ${err.message}`).join(' ')
      }
    }

    response 413 "application/json" {
      map error {
        title = "Payload Too Large"
        detail = body.errors.map((err) => err.message).join(' ')
      }
    }

    response 401 "application/json" {
      map error {
        title = "Unauthorized"
        detail = body.errors.map((err) => err.message).join(' ')
      }
    }

    response 403 "application/json" {
      map error {
        title = "Forbidden"
        detail = body.errors.map((err) => err.message).join(' ')
      }
    }

    response 500 "application/json" {
      map error {
        title = "Internal server Error"
        detail = body.errors.map((err) => err.message).join(' ')
      }
    }
  }
}

map Search {
  set {
    OPERATOR_MAP = {
      'EQ': '=',
      'NEQ': '!=',
    }
  }

  set {
    FIELD_MAP = {
      phone: 'phone_number',
      firstName: 'first_name',
      lastName: 'last_name',
      customProperties: 'custom_fields',
    }
  }

  http POST "/marketing/contacts/search" {
    security "bearer_token"

    request {
      body {
        query = `${FIELD_MAP[input.property] || input.property} ${OPERATOR_MAP[input.operator]} "${input.value}"`
      }
    }

    response 200 "application/json" {
      map result body.result.map((c) => ({
        id: c.id,
        email: c.email,
        phone: c.phone_number,
        firstName: c.first_name,
        lastName: c.last_name,
        country: c.country,
        customProperties: c.custom_fields,
      }))
    }

    response 400 "application/json" {
      map error {
        title = "Invalid inputs"
        detail = body.errors.map((err) => `${err.field}: ${err.message}`).join(' ')
      }
    }

    response 413 "application/json" {
      map error {
        title = "Payload Too Large"
        detail = body.errors.map((err) => err.message).join(' ')
      }
    }

    response 401 "application/json" {
      map error {
        title = "Unauthorized"
        detail = body.errors.map((err) => err.message).join(' ')
      }
    }

    response 403 "application/json" {
      map error {
        title = "Forbidden"
        detail = body.errors.map((err) => err.message).join(' ')
      }
    }

    response 500 "application/json" {
      map error {
        title = "Internal server Error"
        detail = body.errors.map((err) => err.message).join(' ')
      }
    }
  }
}
