profile = "navigation/nearby-poi@1.0"
provider = "google-apis-maps"

map NearbyPoi {
  categories = input.categories || []

  http GET "/maps/api/place/nearbysearch/json" {
    security "apikey"

    request {
      query {
        location = `${input.center.latitude},${input.center.longitude}`,
        radius = input.radius,
        type = call BuildCategoryQueryType(categories = categories)
      }
    }

    response 200 "application/json" {
      return map result if (body.status === "ZERO_RESULTS") []

      return map error if (body.status !== "OK") {
        status: body.status,
        message: body.error_message ? body.error_message : body.status
      }

      points = call foreach(place of body.results) ConvertResponse(place = place)
      set if (categories.length > 1) {
        points = points.filter(
          p => p.categories.some(c => categories.includes(c))
        )
      }

      map result points
    }
  }
}

operation BuildCategoryQueryType {
  return if (args.categories.length !== 1) undefined

  types = call CategoriesToTypes(categories = args.categories)
  return types[0]
}

operation ConvertResponse {
  categories = []
  set if (args.place.types) {
    categories = call TypesToCategories(types = args.place.types)
  }
  
  point = {
    coordinates: {
      latitude: args.place.geometry.location.lat,
      longitude: args.place.geometry.location.lng
    },
    name: args.place.name || args.place.place_id,
    categories: categories
  }

  return point
}

"""
Converts a list of categories into a list of types
"""
operation CategoriesToTypes {
  return if (!args.categories) []

  categoryTypeMap = {
    "RESTAURANT": ["restaurant"],
    "CAFE": ["cafe"],
    "BAR": ["bar"],
    "BANK": ["bank"],
    "ATM":["atm"],
    "HEALTHCARE": [ "doctor","hospital"],
    "SCHOOL": ["university", "primary_school", "school", "secondary_school"],
    "TAXI": ["taxi_stand"],
    "POST": ["post_office"],
    "POLICE": ["police"],
    "PARKING": ["parking"],
    "GROCERY_STORE": ["supermarket", "convenience_store"],
    "TRANSIT_STATION": ["bus_station", "light_rail_station", "subway_station", "train_station", "transit_station"]
  }

  amenities = args.categories.flatMap(
    category => categoryTypeMap[category]
  )

  return amenities
}

"""
Converts a list of types into a list of categories
"""
operation TypesToCategories {
  return if (!args.types) []

  typeCategoryMap = {
    //Restaurant
    "restaurant": "RESTAURANT",
    //Cafe
    "cafe": "CAFE",
    //Bar
    "bar": "BAR",
    //Healthcare
    "doctor": "HEALTHCARE",
    "hospital": "HEALTHCARE",
    //Bank
    "bank": "BANK",
    //ATM
    "atm": "ATM",
    //School
    "university": "SCHOOL",
    "primary_school": "SCHOOL",
    "school": "SCHOOL",
    "secondary_school": "SCHOOL",
    //Taxi
    "taxi_stand": "TAXI",
    //Post
    "post_office": "POST",
    //Police
    "police": "POLICE",
    //Parking
    "parking": "PARKING",
    //Grocery Store
    "convenience_store": "GROCERY_STORE",
    "supermarket": "GROCERY_STORE",
    //Transit Station
    "bus_station": "TRANSIT_STATION",
    "light_rail_station": "TRANSIT_STATION",
    "subway_station": "TRANSIT_STATION",
    "train_station": "TRANSIT_STATION",
    "transit_station": "TRANSIT_STATION"
  }

  types = (() => {
    const types = []

    for (const type of args.types) {
      const category = typeCategoryMap[type]
      if (category !== undefined && !types.includes(category)) {
        types.push(category)
      }
    }

    return types
  })()

  return types
}
