profile = "address/ip-geolocation@1.0"
provider = "ipbase"

//ipbase documentation: https://ipbase.com/docs/
map IpGeolocation {
  ipAddress = ''

  set if(input.ipAddress) {
    ipAddress = input.ipAddress
  }

  http GET "/v2/info" {
    security "apikey"

    request {
    query {
        ip = ipAddress
      }
    }

    response 200 "application/json" {
      data = body.data || {}

      result = {
        ip: data.ip
      }
      set if(data.location) {
        result.postalCode = data.location.zip
        result.latitude = data.location.latitude
        result.longitude = data.location.longitude
      }
      set if (data.location && data.location.country) {
        result.addressCountryCode = data.location.country.alpha2
        result.addressCountry = data.location.country.name
      }
      set if (data.location && data.location.region) {
        result.addressRegion = data.location.region.name
      }
      set if (data.location && data.location.city) {
        result.addressLocality = data.location.city.name
      }
      set if (data.timezone) {
        result.timeZone = data.timezone.id
      }

      map result result
    }

    response {
      error = call MapError(statusCode = statusCode, body = body)
      map error error
    }
  }
}

//ipbase status codes: https://ipbase.com/docs/status-codes
operation MapError {
  statusCode = args.statusCode
  body = args.body
  detail = body.message

  return if (statusCode === 401) {
    title = "Unauthenticated"
    detail = detail
  }

  return if (statusCode === 403) {
    title = "Unauthorized"
    detail = detail
  }

  return if (statusCode === 404) {
    title = "Wrong IP address format"
    detail = detail
  }

   return if (statusCode === 422) {
    title = "Bad request"
    detail = detail
  }

  return if (statusCode === 429) {
    title = "Rate limit exceeded"
    detail = detail
  }

  return {
    title = "Unknown error"
    detail = `Unknown error occurred. Status: ${statusCode}. Ipbase error detail: ${detail}.`
  }
}
